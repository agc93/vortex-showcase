[{"body":"Vortex Showcase is an unofficial extension for the Vortex mod manager that adds support for creating “showcases” based on your installed mods. Think of a showcase as a shareable report of your installed and enabled mods, perfect for either showing off your whole mod list or sharing a great set of related mods with others. To clarify, this project is not affiliated in any way with Nexus Mods or anyone else, and is an open-source community resource.\nStatus and Limitations Vortex Showcase is still beta-quality software! While I can test locally, I won't be able to cover every case and there is a high potential for bugs that haven't been found yet. Equally, this project is still in its infancy so there will likely be quite a few changes to how we do things. The following is definitely supported at this point:\n Sharing your mod list: You can create a showcase based on your current mod list that will use all of your installed and enabled mods Game-agnostic: Currently, showcases don't have any game-specific logic so you should be able to create a showcase based on mods for any of your Vortex-managed games* Specific mod selections: You can also create a showcase based on only some selected mods if you just want to share a few mods that work well together.   * This does come with the caveat that (at this time) showcases also won't include any game-specific mod information, such as Gamebryo plugins, or load order information.\n If you're really missing specific features you can open an issue and we can discuss the viability, or find me on the Nexus Mods Discord.\nPurpose To be clear about this: this extension is not intended as a backup solution, modwat.ch replacement, or anything else like that. We cover this in the FAQ, but this is simply a way of creating decent-looking shareable mod lists from within Vortex.\n","excerpt":"Vortex Showcase is an unofficial extension for the Vortex mod manager …","ref":"/docs/introduction/","title":"Introduction"},{"body":"There's two ways to create a showcase, depending on whether you want to use all of your enabled mods, or just some.\nTo create a showcase with all of your currently enabled mods, use the Create Showcase button in the top toolbar of the Mods screen. This will walk you through creating a showcase with any mods you have currently installed and enabled.\nTo create a showcase with only some selected mods, select all the mods you want to include from the Mods list (hold Ctrl key and click on each one) and use the Create Showcase button in the bottom action bar to create a showcase with just those mods.\n Once you've started your showcase, you'll be prompted for a name for your showcase (this can be anything you like) and what format you want your showcase in. Choose a format using the selections at the bottom of the dialog and click Create to start the showcase generation process. Once we've finished creating your showcase you'll see a notification appear and you can choose to copy the showcase to your clipboard or save it to a file on your PC.\n","excerpt":"There's two ways to create a showcase, depending on whether you want …","ref":"/docs/usage/showcase/","title":"Creating a Showcase"},{"body":" This site includes only the guides for getting started with Vortex Showcase specifically. For help with Vortex itself, check out the Vortex Support page.\n Welcome to the User Guide for the Vortex Showcase project! Navigate the documentation using the links on the sidebar.\nDocumentation for how to get started with the extension, as well as how to start creating your own showcases is available. Remember, these docs are also open-source and contributions are always welcome!\n","excerpt":" This site includes only the guides for getting started with Vortex …","ref":"/docs/","title":"Documentation"},{"body":"Below is a collection of frequent questions and the best answers I can give.\nWhy do I need Vortex for this? You don't! This extension is specifically for people already using Vortex to manage your mods who want an easy way to share all or part of their mod setups. If you're currently using NMM/MO2/any other modding tool, this isn't for you!\nDoesn't Vortex already let you create mod reports? Yes, and they're amazing! But they're a troubleshooting measure, first and foremost. Every mod creates its own report, and they're very technical: listing individual files, plugins and deployment details. Showcases don't have any of that detail, but are much more human-readable. Different tools for different purposes!\nWhat games can I use this with? Any game you manage with Vortex should work! We pull the information on your mods directly from Vortex so any game that you're managing with Vortex, either built-in or through an extension, should work fine. If you find any problems that seem to only affect certain games, please raise an issue with as much information as you can.\nCan I use this to backup/restore my mods? No. Backup and restore of complex mod installations is a surprisingly hard problem, and it's not the problem that Showcase is trying to solve. As well as just being a very complicated thing to effectively backup, getting the level of detail required for reliable backup/restore requires a lot of game-specific logic that we just don't have here.\nYou can, however, create a showcase and use that to rebuild your mods from scratch if you want. You might also be interested in this other community extension.\nWhy doesn't the showcase include plugins? The main reason is that the concept of plugins is very game-specific! What most people refer to as Plugins is the result of another (bundled) Vortex extension that handles plugins for Gamebryo games. Showcase deliberately tries to avoid game-specific features as much as possible.\nThe second reason is that Gamebryo plugins are complicated. Take a look at the extension above and you'll find about 6000 lines of code dedicated to reading and managing plugins for Gamebryo games. I just don't have the capacity to add that level of complexity to this extension. I might try and add them at some point (given how ubiquitous the Gamebryo games are), but there'll have to be a bit of reverse engineering first.\nWhat about mods that aren't on the Nexus? They will still be included in your showcase, but they might not have quite as much information. A lot of the information that Vortex knows about a mod comes from Nexus Mods (or another metaserver for some games), and this extension just pulls mod metadata from what Vortex already knows about your mods.\n","excerpt":"Below is a collection of frequent questions and the best answers I can …","ref":"/docs/introduction/faq/","title":"Frequently Asked Questions"},{"body":"Installing the Extension To create showcases, you'll need to install the extension into Vortex first. There's a couple of different ways to do that, but unless you've got a pretty specific use case, you'll probably want one of the two automatic methods, but manual installation is available as well.\nAutomatic Installation  This is the easiest way to install!\n  Open up Vortex, and open the Extensions panel from the left sidebar. Click Find more to open the list of Extensions Find Vortex Showcase and click Install Wait for the extension to install and restart Vortex when prompted.  Once Vortex has restarted, switch back to your Mods screen and you should be ready to create a showcase!\nSemi-Automatic Installation If you can't install directly from the Extensions screen, you can instead install from the archive.\n Download the archive from Nexus Mods or GitHub Open the Extensions panel in Vortex Click on the Drop File(s) box in the corner and locate the archive you downloaded. Wait for the extension to install and restart Vortex when prompted.  Once Vortex has restarted, switch back to your Mods screen and you should be ready to create a showcase!\nManual Installation  Only attempt this if you absolutely have to. It becomes much harder to debug and much harder to upgrade.\n If you want to install the extension yourself, you will have to install the actual extension files manually. Make sure you close Vortex before proceeding.\nFirst, download the archive from Nexus Mods or GitHub.\nNext, unpack the archive to somewhere convenient. You should have a directory named vortex-showcase with a handful of files inside, including at least the following:\n info.json index.js  Now, copy the whole directory to your Vortex folder. You can easily open your Vortex folder by opening a new File Explorer window and entering the following in to the location bar: %APPDATA%/Vortex and then opening the plugins directory (create it if it doesn’t exist).\nOnce you’re done, you should have files at the following location:\nC:\\Users\\\u003cyour-user-name-here\u003e\\AppData\\Roaming\\Vortex\\plugins\\vortex-showcase\\info.json C:\\Users\\\u003cyour-user-name-here\u003e\\AppData\\Roaming\\Vortex\\plugins\\vortex-showcase\\index.js C:\\Users\\\u003cyour-user-name-here\u003e\\AppData\\Roaming\\Vortex\\plugins\\vortex-showcase\\\u003csome-other-files\u003e... With those files in place, you're clear to start Vortex and you should see the actions in your Mods screen.\n","excerpt":"Installing the Extension To create showcases, you'll need to install …","ref":"/docs/usage/installation/","title":"Installation"},{"body":"","excerpt":"","ref":"/blog/releases/","title":"Releases"},{"body":" This site includes only the guides for getting started with the extension and creating showcases with Vortex. For help with Vortex, check out the Vortex Support page.\n Ready to create your own mod showcases? Awesome!\nIn general terms, you need to install the extension, then create a showcase and you're ready to share!\n","excerpt":" This site includes only the guides for getting started with the …","ref":"/docs/usage/","title":"Usage"},{"body":"Showcase is fully open-source! You can see the full code for the extension (including these docs) on GitHub. Community contributions, fixes and PRs are all welcome! That being said, please read the info below to make all of our lives a bit easier.\nLicensing Vortex Showcase is made available under an MIT License. That means all contributions will also be licensed under the MIT License and all the conditions and limitations that involves.\nDevelopment Environment To work with the Showcase code, you'll only need Node.js (including a recent version of npm) and TypeScript installed. Development so far has been done in Visual Studio Code, but any IDE that supports TypeScript should work just fine.\n There's currently very little tsdoc included, this will hopefully change in a future release\n Getting set up Whether you are developing on the same machine that Vortex is installed on or not, the easiest way I have found to work with this has been to install the extension manually, then whenever I make a change simply drop my rebuilt index.js into the vortex-showcase folder and restart Vortex. Also remember to update the template files in your target environment if you make any changes.\nYou can find Diagnostics Logs in the overflow menu at the top right of the Vortex window. There is also a Vortex extension that lets you open the DevTools window.\nContinuous Integration Note that all commits to, and pull requests against, the master branch are automatically built as part of a GitHub Action. Please don't add unnecessary changes to the Actions workflow without prior discussion.\nFeature Requests Showcase is a community project, currently built and maintained by a single non-developer. As such, feature requests will be accepted, but I can't provide any level of assurance that any requests will certainly be included. Also remember that we are limited to features that Vortex can reasonably support. Open an issue on GitHub to discuss viability of any requests.\nI'd also like to maintain Showcase as game-independent as possible, so please don't open issues/PRs for very game-specific functionality. Ideally, I'll be extending the API that Showcase provides in future to allow for enhancing game-specific capabilities but this is a long way off.\nA note on confusing code For anyone who decides to wade into the Showcase code, there's a few things worth remembering:\n I'm not a developer: This is just something I'm doing in my spare time, so don't expect super-high-quality code. I'll happily take fixes, though! Working with Vortex is weird: There's quite a few quirks of the codebase that exist because of unfathomably mystifying behaviour in Vortex's extension API. The over-engineering is deliberate: This was as much of an exercise in my own JS/TS skills as anything else, so I've deliberately over-engineered the extension.  ","excerpt":"Showcase is fully open-source! You can see the full code for the …","ref":"/docs/developer/","title":"Developer Guide"},{"body":"Ironically, the documentation side of the project has slightly higher environment requirements than the project itself! We're using the Hugo static site generator with the Docsy template, so you will need to have a recent version of Hugo Extended installed, as well as npm to restore the required tools.\nActual docs content is all stored in the content/ directory, organised under language. At this time only English (en) is included, although translations are more than welcome!\n","excerpt":"Ironically, the documentation side of the project has slightly higher …","ref":"/docs/developer/docs/","title":"Docs Contributions"},{"body":"The one advantage to Vortex Showcase's hilariously excessive over-engineering is that it has ended up specifically designed to make adding new formats or actions very simple.\nShowcase Formats In it's simplest form, a format is a function that takes a model (an ITemplateModel to be specific) and returns a string with the text content of the showcase. The complicated integration work of pulling mods and their metadata out of Vortex, as well as filtering out some stuff, is done by Showcase itself before the format renderers are called. For example, the two default renderers take this model and use Mustache.js to render templates with that model and return the generated string content.\nAll showcase formats are loaded directly from Vortex's session state using the extension API, even the default ones. The Markdown and BBCode renderers are not hard-coded anywhere, they're just registered as formats when the extension loads.\nRegistering formats/renderers Registering a new format requires two things: an implementation of IShowcaseRenderer and dispatching a registerShowcaseRenderer action. You can find this in the index.ts for the default formats, where we register a MarkdownRenderer as below:\ncontext.once(() =\u003e { context.api.store.dispatch(registerShowcaseRenderer('Markdown', () =\u003e new MarkdownRenderer())); ... }); The string key (i.e. Markdown) is what's shown to users so make sure it's reasonably friendly. The second parameter is a callback to return your renderer. If you need constructor params or any other weird setup, you should be safe-ish to do that here.\nRendering showcases When a user creates a showcase, they are prompted with all the currently registered renderers and can choose one. Once they hit Create, the extension will pull the IShowcaseRenderer with the matching key from session state and invoke it in two stages: model build and final rendering.\nFirst, to build the model metadata, the createModel function for the current renderer is called for each mod. If you don't need to do any customisation or control how mod metadata is created, then just return null, and the extension will populate sane defaults (using ModInfoDisplay.create).\nNext, once the template model has been built, the extension will call the createShowcase function passing in the generated model and the extension API (for convenience). This is where the actual rendering happens, and this function should return the final string contents of the showcase, which the user can then copy/save.\nThe final (and minor) function in a renderer is to return a file name in createFileName based on the user-provided title. This is essentially optional: if you return null/undefined, Vortex will prompt the user for a file name and location. You can, however, use this step to manually specify a name (as the Markdown renderer does), or only return a file extension (i.e. return '*.csv') and Vortex will also prompt the user, but automatically use the right extension.\nActions There's the beginnings of an API to take certain actions after a showcase is generated, but this is not finalised so I have not included it here. This API is intended for things like uploading certain showcase formats, or letting users directly share a showcase through other means.\n","excerpt":"The one advantage to Vortex Showcase's hilariously excessive …","ref":"/docs/developer/extensions/","title":"Extensions API"},{"body":" This release is now available on Nexus Mods.\n This release is a minor bugfix to change the style used for the BBCode format:\n There's no longer any size tags included, so showcases should now be more compatible with the Nexus Mods site Descriptions will no longer be HTML-escaped so there will be a lot less \u0026lt;br /\u0026gt; in your showcases 😄 (but now there'll be a lot of \u003cbr /\u003e 😢) Missing version numbers are handled a little more gracefully than before   Big thanks to @Pickysaurus for the help with BBCode/Nexus formatting!\n This release is the first alpha of the Vortex Showcase extension! Get started with your own mod showcases using the action buttons in your Mods page, and make sure to report any issues you find or give any feedback.\n","excerpt":" This release is now available on Nexus Mods.\n This release is a minor …","ref":"/blog/2020/07/07/initial-release/","title":"Initial Release"},{"body":" This release is now available on Nexus Mods.\n This release is a minor bugfix to correct an error in the BBCode format. Thanks @Pickysaurus as usual!\nThis release is the first alpha of the Vortex Showcase extension! Get started with your own mod showcases using the action buttons in your Mods page, and make sure to report any issues you find or give any feedback.\n","excerpt":" This release is now available on Nexus Mods.\n This release is a minor …","ref":"/blog/2020/07/05/initial-release/","title":"Initial Release"},{"body":"This release is the first alpha of the Vortex Showcase extension! Get started with your own mod showcases using the action buttons in your Mods page, and make sure to report any issues you find or give any feedback.\n","excerpt":"This release is the first alpha of the Vortex Showcase extension! Get …","ref":"/blog/2020/07/04/initial-release/","title":"Initial Release"},{"body":"","excerpt":"","ref":"/blog/","title":"Updates"},{"body":"  #td-cover-block-0 { background-image: url(/background_hu1432a9202ec00923ea21a6e52b73e33d_135407_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/background_hu1432a9202ec00923ea21a6e52b73e33d_135407_1920x1080_fill_q75_catmullrom_top.jpg); } }  Vortex Showcase Documentation   GitHub   Nexus Mods   Share your modding setups and build shareable mod lists directly from Vortex. Fully open-source.\n\n        This is a simple extension that lets you create “showcases” to share mod lists. You can create a showcase from your entire behemoth of a mod list, or just select individual mods to share with your fellow modders.\nThis project is unofficial! We have no association with Nexus Mods and is only a community project.\n      Full Vortex integration Easily create showcases right from Vortex based on any of your installed mods.\n   Contributions welcome! The extension is fully open-source and open to community contributions and fixes!\nRead more …\n   Extensible Showcase has been designed to easily support additional formats or mod types easily without sacrificing metadata.\n     Photo by Stefan Gall on Unsplash     ","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/","title":"Vortex Showcase"}]